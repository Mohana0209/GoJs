<ui:composition xmlns="http://www.w3.org/1999/xhtml"
   xmlns:h="http://java.sun.com/jsf/html"
   xmlns:f="http://java.sun.com/jsf/core"
   xmlns:p="http://primefaces.org/ui"
   xmlns:sc="http://java.sun.com/jsf/composite/solartis"
   xmlns:ui="http://java.sun.com/jsf/facelets"
   xmlns:c="http://java.sun.com/jsp/jstl/core"
   xmlns:sf="http://solartis.com/facelets"
   xmlns:fn="http://java.sun.com/jsp/jstl/functions">
          
	 <script src="go.js">
	 
	 </script>
	
	  <link href='https://fonts.googleapis.com/css?family=Droid+Serif:400,700' rel='stylesheet' type='text/css'></link>
	  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js">
	  
	  </script>
	 
    <script>
    
    function gojsScript() {
    	
      var $$ = go.GraphObject.make;  // for conciseness in defining templates
      
      myDiagram =
        $$(go.Diagram, "myDiagramDiv",  // must be the ID or reference to div
          {
            "toolManager.hoverDelay": 100,  // 100 milliseconds instead of the default 850
            allowCopy: false,
            layout:  // create a TreeLayout for the family tree
              $$(go.TreeLayout,
                { angle: 90, nodeSpacing: 10, layerSpacing: 40, layerStyle: go.TreeLayout.LayerUniform })
          });
      var bluegrad = '#90CAF9';
      var pinkgrad = '#F48FB1';
     
      var tooltiptemplate =
        $$("ToolTip",
          { "Border.fill": "whitesmoke", "Border.stroke": "black" },
          $$(go.TextBlock,
            {
              font: "normal 8pt Helvetica, normal Times, serif",
              wrap: go.TextBlock.WrapFit,
              margin: 5
            },
            //new go.Binding("text", "", tooltipTextConverter))
			new go.Binding("text", ""))
        );
      // define Converters to be used for Bindings
       
      function typeBrushConverter(type) {
        if (type === "P") return bluegrad;
        if (type === "C") return pinkgrad;
        return "orange";
      }
      // replace the default Node template in the nodeTemplateMap
      
      myDiagram.nodeTemplate =
        $$(go.Node, "Auto",
          { deletable: false, toolTip: tooltiptemplate },
          new go.Binding("text", "name"),
          $$(go.Shape, "Rectangle",
            {
              fill: "lightgray",
              stroke: null, strokeWidth: 0,
              stretch: go.GraphObject.Fill,
              alignment: go.Spot.Center
            },
            new go.Binding("fill", "type", typeBrushConverter)),
          $$(go.TextBlock,
            {
              font: "normal 8pt Helvetica, normal Times, serif",
              textAlign: "center",
              margin: 10, maxSize: new go.Size(80, NaN)
            },
            new go.Binding("text", "key"))
        );
      // define the Link template
      myDiagram.linkTemplate =
        $$(go.Link,  // the whole link panel
          { routing: go.Link.Orthogonal, corner: 5, selectable: false },
          $$(go.Shape, { strokeWidth: 3, stroke: '#424242' }));  // the gray link shape
          
        
      var nodes=document.getElementById("nodeFinalResult").value;
		window.alert("Nodes:"+nodes);
		var node=JSON.parse(nodes);
        myDiagram.model = new go.TreeModel(node);
          	
        }
    $(document).ready(function(){
    	gojsScript();
    });
      </script>
	  <body>
	  <h:inputHidden id="nodeFinalResult"  value="#{beanName.getNodeResult()}" />
	   <div id="sample">
         	<div id="myDiagramDiv" style="background-color: white; border: solid 1px black; width: 100%; height: 550px"></div>	
       </div>
	  </body>
